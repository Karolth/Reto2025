
### =========================
### üéüÔ∏è M√ìDULO DE EVENTOS (RF1 / RF5)
### =========================

### Obtener todos los eventos
GET http://127.0.0.1:8000/eventos
Content-Type: application/json

###

### Obtener evento por ID
GET http://127.0.0.1:8000/eventos/1
Content-Type: application/json

###

### Buscar eventos por fecha
GET http://127.0.0.1:8000/eventos/buscar/fecha?fecha=2025-10-22
Content-Type: application/json

###

### Buscar eventos por municipio
GET http://127.0.0.1:8000/eventos/buscar/municipio?municipio=Sogamoso
Content-Type: application/json

###

### Buscar eventos por departamento
GET http://127.0.0.1:8000/eventos/buscar/departamento?departamento=Boyac√°
Content-Type: application/json

###

### Crear nuevo evento
POST http://127.0.0.1:8000/eventos
Content-Type: application/json

{
  "nombre": "Festival de la Cultura",
  "descripcion": "Evento art√≠stico con presentaciones musicales y exposiciones",
  "fecha_inicio": "2025-11-05 18:00:00",
  "fecha_fin": "2025-11-06 23:00:00",
  "municipio": "Sogamoso",
  "departamento": "Boyac√°",
  "lugar": "Parque principal"
}

###

### Actualizar evento
PUT http://127.0.0.1:8000/eventos/1
Content-Type: application/json

{
  "nombre": "Festival de la Cultura - Edici√≥n 2025",
  "descripcion": "Evento renovado con artistas nacionales e internacionales",
  "fecha_inicio": "2025-11-05 18:00:00",
  "fecha_fin": "2025-11-06 23:59:00",
  "municipio": "Sogamoso",
  "departamento": "Boyac√°",
  "lugar": "Parque principal"
}

###

### Eliminar evento
DELETE http://127.0.0.1:8000/eventos/1
Content-Type: application/json



### =========================
### üèüÔ∏è M√ìDULO DE LOCALIDADES (RF3)
### =========================

### Listar localidades
GET http://127.0.0.1:8000/localidades
Content-Type: application/json

###

### Crear localidad
POST http://127.0.0.1:8000/localidades
Content-Type: application/json

{
  "codigo": "VIP",
  "nombre": "Zona VIP"
}

###

POST http://127.0.0.1:8000/localidades
Content-Type: application/json

{
  "codigo": "GEN",
  "nombre": "General"
}



### =========================
### üé´ M√ìDULO DE BOLETER√çA (RF2)
### =========================

### Crear boleter√≠a para un evento
POST http://127.0.0.1:8000/boleteria
Content-Type: application/json

{
  "id_evento": 1,
  "localidad": "VIP",
  "valor": 50000,
  "cantidad": 200
}

###

### Listar boleter√≠a por evento
GET http://127.0.0.1:8000/boleteria/1
Content-Type: application/json



### =========================
### üé§ M√ìDULO DE ARTISTAS (RF4)
### =========================

### Listar artistas
GET http://127.0.0.1:8000/artistas
Content-Type: application/json

###

### Crear artista
POST http://127.0.0.1:8000/artistas
Content-Type: application/json

{
  "codigo": "A001",
  "nombres": "Carlos",
  "apellidos": "Vives",
  "genero_musica": "Vallenato",
  "ciudad_natal": "Santa Marta"
}

###

POST http://127.0.0.1:8000/artistas
Content-Type: application/json

{
  "codigo": "A002",
  "nombres": "Shakira",
  "apellidos": "Mebarak",
  "genero_musica": "Pop",
  "ciudad_natal": "Barranquilla"
}



### Registro de Usuario Comprador (RF11)
POST http://127.0.0.1:8000/usuarios/register
Content-Type: application/json

{
    "nombres": "Ana",
    "apellidos": "Maria",
    "tipo_documento": "CC",
    "numero_documento": "1002200330",
    "email": "ana.maria.new@test.com", 
    "password": "Password123",
    "confirmacion_password": "Password123",
    "telefono": "3001234567"
}

### 1. Registrar Nuevo Usuario (POST)
POST http://127.0.0.1:8000/usuarios/register
Content-Type: application/json

{
    "nombres": "Erika",
    "apellidos": "Martinez",
    "tipo_documento": "CC",
    "numero_documento": "1001100110",
    "email": "erika.martinez@ejemplo.com", 
    "password": "Password123",
    "confirmacion_password": "Password123", 
    "telefono": "3005559999"
}

### -------------------------------------------

### 2. Iniciar Sesi√≥n (POST)
# @name login
POST http://127.0.0.1:8000/usuarios/login
Content-Type: application/json

{
    "email": "ana.maria.new@test.com",
    "password": "Password123"
}

### -------------------------------------------

### 3. Actualizar Perfil (PUT - Requiere Token)
# Esto asume que el token fue guardado en una variable @token
# Si no usas variables, copia el token del login manualmente.
@token = {{login.response.body.data.token}} 

PUT http://127.0.0.1:8000/usuarios/perfil
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "nombres": "Erika Sofia",
    "apellidos": "Martinez Rojas",
    "tipo_documento": "CC",
    "numero_documento": "1001100110",
    "email": "erika.sofia@ejemplo.com", 
    "telefono": "3005551111"
}

### -------------------------------------------

### 4. Cerrar Sesi√≥n (POST - Requiere Token)
POST http://127.0.0.1:8000/usuarios/logout
Authorization: Bearer {{token}}