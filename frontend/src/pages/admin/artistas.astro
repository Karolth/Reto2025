---
import Layout from '../../layouts/Layout.astro';
import { getArtistas } from '../../lib/api';

const artistas = await getArtistas();
---

<Layout title="Gestión de Artistas - Admin">
  <div class="admin-wrapper">
    <!-- Sidebar -->
    <aside class="admin-sidebar">
      <div class="sidebar-header">
        <h2 class="sidebar-logo">CONCERTO</h2>
        <span class="sidebar-subtitle">PANEL ADMIN</span>
      </div>
      <nav class="sidebar-nav">
        <a href="/admin/dashboard" class="nav-item">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="3" width="7" height="7"></rect>
            <rect x="14" y="3" width="7" height="7"></rect>
            <rect x="14" y="14" width="7" height="7"></rect>
            <rect x="3" y="14" width="7" height="7"></rect>
          </svg>
          Dashboard
        </a>
        <a href="/admin/eventos" class="nav-item">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
          </svg>
          Eventos
        </a>
        <a href="/admin/artistas" class="nav-item active">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M9 18V5l12-2v13"></path>
            <circle cx="6" cy="18" r="3"></circle>
            <circle cx="18" cy="16" r="3"></circle>
          </svg>
          Artistas
        </a>
        <a href="/admin/localidades" class="nav-item">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
            <circle cx="12" cy="10" r="3"></circle>
          </svg>
          Localidades
        </a>
        <a href="/" class="nav-item nav-logout">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
            <polyline points="16 17 21 12 16 7"></polyline>
            <line x1="21" y1="12" x2="9" y2="12"></line>
          </svg>
          Cerrar Sesión
        </a>
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="admin-main">
      <div class="admin-header">
        <div>
          <h1>GESTIÓN DE ARTISTAS</h1>
          <p>Administra todos los artistas del sistema</p>
        </div>
        <button id="btnCrearArtista" class="btn-primary">CREAR ARTISTA</button>
      </div>

      <!-- Filtros -->
      <div class="filters-section">
        <input type="text" id="searchArtista" placeholder="Buscar por nombre..." class="filter-input">
        <input type="text" id="generoFilter" placeholder="Buscar por género..." class="filter-input">
      </div>

      <!-- Tabla de Artistas -->
      <div class="table-section">
        <table class="admin-table">
          <thead>
            <tr>
              <th>CÓDIGO</th>
              <th>NOMBRES</th>
              <th>APELLIDOS</th>
              <th>GÉNERO MUSICAL</th>
              <th>CIUDAD NATAL</th>
            </tr>
          </thead>
          <tbody id="artistasTableBody">
            {artistas.map(artista => (
              <tr data-nombre={`${artista.nombres} ${artista.apellidos}`.toLowerCase()}
                  data-genero={artista.genero_musica.toLowerCase()}>
                <td><span class="table-id">{artista.codigo_artista}</span></td>
                <td class="artista-nombre">{artista.nombres}</td>
                <td class="artista-nombre">{artista.apellidos}</td>
                <td>{artista.genero_musica}</td>
                <td>{artista.ciudad_natal}</td>
              </tr>
            ))}
          </tbody>
        </table>

        {artistas.length === 0 && (
          <div class="no-data">
            <svg class="no-data-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 18V5l12-2v13"></path>
              <circle cx="6" cy="18" r="3"></circle>
              <circle cx="18" cy="16" r="3"></circle>
            </svg>
            <h3>NO HAY ARTISTAS REGISTRADOS</h3>
            <p>Comienza agregando tu primer artista</p>
            <button id="btnCrearPrimerArtista" class="btn-primary">CREAR PRIMER ARTISTA</button>
          </div>
        )}
      </div>
    </main>
  </div>

  <!-- Modal Crear Artista -->
  <div id="artistaModal" class="modal">
    <div class="modal-content-large">
      <div class="modal-header">
        <h2 id="modalTitle">CREAR ARTISTA</h2>
        <button id="closeModal" class="btn-close">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      
      <form id="artistaForm">
        <div class="form-grid">
          <div class="form-group">
            <label for="codigo">CÓDIGO DEL ARTISTA</label>
            <input type="text" id="codigo" name="codigo" required placeholder="Ej: ART001">
          </div>

          <div class="form-group">
            <label for="genero_musica">GÉNERO MUSICAL</label>
            <input type="text" id="genero_musica" name="genero_musica" required placeholder="Ej: Rock, Pop, Reggaeton">
          </div>

          <div class="form-group">
            <label for="nombres">NOMBRES</label>
            <input type="text" id="nombres" name="nombres" required placeholder="Ej: Juan Carlos">
          </div>

          <div class="form-group">
            <label for="apellidos">APELLIDOS</label>
            <input type="text" id="apellidos" name="apellidos" required placeholder="Ej: Pérez García">
          </div>

          <div class="form-group full-width">
            <label for="ciudad_natal">CIUDAD NATAL</label>
            <input type="text" id="ciudad_natal" name="ciudad_natal" required placeholder="Ej: Bogotá, Colombia">
          </div>
        </div>

        <div class="form-actions">
          <button type="button" id="cancelForm" class="btn-secondary">CANCELAR</button>
          <button type="submit" class="btn-primary">CREAR ARTISTA</button>
        </div>
      </form>

      <div id="formMensaje" class="mensaje"></div>
    </div>
  </div>
</Layout>

<style>
  .admin-wrapper {
    display: flex;
    min-height: 100vh;
    background: #0a0a0a;
  }

  .admin-sidebar {
    width: 280px;
    background: linear-gradient(180deg, #2d0a4e 0%, #1a0033 100%);
    border-right: 3px solid #ff0066;
    position: fixed;
    height: 100vh;
    overflow-y: auto;
  }

  .sidebar-header {
    padding: 2rem 1.5rem;
    border-bottom: 2px solid rgba(255, 0, 102, 0.3);
  }

  .sidebar-logo {
    color: #fff;
    font-size: 1.8rem;
    font-weight: 900;
    letter-spacing: 3px;
    background: linear-gradient(90deg, #ff0066, #ff6b9d);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 0.3rem;
  }

  .sidebar-subtitle {
    color: #aaa;
    font-size: 0.85rem;
    font-weight: 600;
    letter-spacing: 2px;
  }

  .sidebar-nav {
    padding: 1.5rem 0;
  }

  .nav-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 1.5rem;
    color: #ccc;
    text-decoration: none;
    transition: all 0.3s;
    font-weight: 600;
    font-size: 0.95rem;
    letter-spacing: 0.5px;
  }

  .nav-icon {
    width: 22px;
    height: 22px;
    stroke-width: 2.5;
  }

  .nav-item:hover {
    background: rgba(255, 0, 102, 0.15);
    color: #fff;
    border-left: 4px solid #ff0066;
  }

  .nav-item.active {
    background: rgba(255, 0, 102, 0.2);
    color: #ff0066;
    border-left: 4px solid #ff0066;
  }

  .nav-logout {
    margin-top: 2rem;
    border-top: 2px solid rgba(255, 0, 102, 0.3);
    padding-top: 1.5rem;
    color: #ff6b6b;
  }

  .nav-logout:hover {
    background: rgba(255, 107, 107, 0.1);
    border-left: 4px solid #ff6b6b;
  }

  .admin-main {
    flex: 1;
    margin-left: 280px;
    padding: 2.5rem;
  }

  .admin-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2.5rem;
  }

  .admin-header h1 {
    font-size: 2.8rem;
    font-weight: 900;
    color: #ff0066;
    margin-bottom: 0.5rem;
    letter-spacing: 3px;
  }

  .admin-header p {
    color: #aaa;
    font-size: 1.1rem;
  }

  .btn-primary {
    padding: 0.9rem 2rem;
    background: linear-gradient(135deg, #ff0066, #cc0052);
    color: #fff;
    text-decoration: none;
    border-radius: 30px;
    font-weight: 700;
    transition: all 0.3s;
    border: none;
    cursor: pointer;
    font-size: 0.9rem;
    letter-spacing: 1px;
  }

  .btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 0, 102, 0.5);
  }

  .filters-section {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    border: 2px solid rgba(255, 0, 102, 0.2);
  }

  .filter-input {
    padding: 0.9rem 1rem;
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 0, 102, 0.3);
    border-radius: 10px;
    color: #fff;
    font-size: 0.95rem;
    transition: all 0.3s;
  }

  .filter-input:focus {
    outline: none;
    border-color: #ff0066;
    box-shadow: 0 0 15px rgba(255, 0, 102, 0.3);
  }

  .table-section {
    background: rgba(255, 255, 255, 0.03);
    padding: 2rem;
    border-radius: 15px;
    border: 2px solid rgba(255, 0, 102, 0.2);
    overflow-x: auto;
  }

  .admin-table {
    width: 100%;
    border-collapse: collapse;
  }

  .admin-table thead {
    background: rgba(255, 0, 102, 0.1);
  }

  .admin-table th {
    padding: 1.2rem 1rem;
    text-align: left;
    color: #ff0066;
    font-weight: 700;
    border-bottom: 2px solid #ff0066;
    font-size: 0.85rem;
    letter-spacing: 1px;
    white-space: nowrap;
  }

  .admin-table td {
    padding: 1.2rem 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    color: #ccc;
  }

  .admin-table tbody tr {
    transition: all 0.3s;
  }

  .admin-table tbody tr:hover {
    background: rgba(255, 0, 102, 0.08);
  }

  .table-id {
    color: #ff0066;
    font-weight: 700;
  }

  .artista-nombre {
    color: #fff;
    font-weight: 600;
  }

  .no-data {
    text-align: center;
    padding: 4rem 2rem;
  }

  .no-data-icon {
    width: 80px;
    height: 80px;
    margin: 0 auto 1.5rem;
    stroke: #ff0066;
    opacity: 0.5;
  }

  .no-data h3 {
    color: #ff0066;
    font-size: 1.8rem;
    margin-bottom: 1rem;
    font-weight: 900;
    letter-spacing: 2px;
  }

  .no-data p {
    color: #aaa;
    font-size: 1.1rem;
    margin-bottom: 2rem;
  }

  .modal {
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.85);
    z-index: 1000;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(5px);
  }

  .modal.active {
    display: flex;
  }

  .modal-content-large {
    background: linear-gradient(135deg, #2d0a4e 0%, #1a0033 100%);
    padding: 2.5rem;
    border-radius: 20px;
    border: 2px solid #ff0066;
    max-width: 800px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    animation: modalSlideIn 0.3s ease-out;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: translateY(-50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid rgba(255, 0, 102, 0.3);
  }

  .modal-header h2 {
    color: #ff0066;
    font-size: 2rem;
    font-weight: 900;
    letter-spacing: 2px;
  }

  .btn-close {
    background: none;
    border: none;
    color: #fff;
    cursor: pointer;
    padding: 0.5rem;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s;
  }

  .btn-close svg {
    width: 24px;
    height: 24px;
    stroke-width: 3;
  }

  .btn-close:hover {
    background: rgba(255, 0, 102, 0.2);
    border-radius: 50%;
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group.full-width {
    grid-column: 1 / -1;
  }

  .form-group label {
    color: #ff0066;
    font-weight: 700;
    font-size: 0.9rem;
    margin-bottom: 0.8rem;
    letter-spacing: 1px;
  }

  .form-group input {
    padding: 1rem;
    background: rgba(0, 0, 0, 0.4);
    border: 2px solid rgba(255, 0, 102, 0.3);
    border-radius: 10px;
    color: #fff;
    font-size: 1rem;
    transition: all 0.3s;
    font-family: 'Montserrat', sans-serif;
  }

  .form-group input:focus {
    outline: none;
    border-color: #ff0066;
    box-shadow: 0 0 15px rgba(255, 0, 102, 0.3);
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
  }

  .btn-secondary {
    padding: 0.9rem 2rem;
    background: rgba(255, 255, 255, 0.1);
    color: #fff;
    border: 2px solid #fff;
    border-radius: 30px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    font-size: 0.9rem;
    letter-spacing: 1px;
  }

  .btn-secondary:hover {
    background: #fff;
    color: #1a0033;
  }

  .mensaje {
    margin-top: 1.5rem;
    padding: 1rem;
    border-radius: 10px;
    font-weight: 600;
    text-align: center;
    display: none;
  }

  .mensaje.success {
    background: rgba(0, 255, 136, 0.2);
    color: #00ff88;
    border: 2px solid #00ff88;
    display: block;
  }

  .mensaje.error {
    background: rgba(255, 107, 107, 0.2);
    color: #ff6b6b;
    border: 2px solid #ff6b6b;
    display: block;
  }

  @media (max-width: 968px) {
    .admin-sidebar {
      width: 100%;
      position: relative;
      height: auto;
    }

    .admin-main {
      margin-left: 0;
      padding: 1.5rem;
    }

    .filters-section {
      grid-template-columns: 1fr;
    }

    .admin-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .admin-header h1 {
      font-size: 2rem;
    }

    .form-grid {
      grid-template-columns: 1fr;
    }

    .modal-content-large {
      width: 95%;
      padding: 1.5rem;
    }
  }
</style>

<script>
  const API_URL = 'http://127.0.0.1:8000';
  
  // Elementos del DOM
  const btnCrearArtista = document.getElementById('btnCrearArtista') as HTMLButtonElement;
  const btnCrearPrimerArtista = document.getElementById('btnCrearPrimerArtista') as HTMLButtonElement;
  const artistaModal = document.getElementById('artistaModal') as HTMLElement;
  const closeModal = document.getElementById('closeModal') as HTMLButtonElement;
  const cancelForm = document.getElementById('cancelForm') as HTMLButtonElement;
  const artistaForm = document.getElementById('artistaForm') as HTMLFormElement;
  const formMensaje = document.getElementById('formMensaje') as HTMLElement;

  // Filtros
  const searchInput = document.getElementById('searchArtista') as HTMLInputElement;
  const generoFilter = document.getElementById('generoFilter') as HTMLInputElement;
  const artistasRows = document.querySelectorAll('#artistasTableBody tr');

  // Función para abrir modal
  function abrirModal() {
    artistaForm.reset();
    formMensaje.className = 'mensaje';
    formMensaje.style.display = 'none';
    artistaModal.classList.add('active');
  }

  // Función para cerrar modal
  function cerrarModal() {
    artistaModal.classList.remove('active');
    artistaForm.reset();
  }

  // Event Listeners
  btnCrearArtista?.addEventListener('click', abrirModal);
  btnCrearPrimerArtista?.addEventListener('click', abrirModal);
  closeModal.addEventListener('click', cerrarModal);
  cancelForm.addEventListener('click', cerrarModal);

  // Cerrar modal al hacer clic fuera
  artistaModal.addEventListener('click', (e) => {
    if (e.target === artistaModal) {
      cerrarModal();
    }
  });

  // Submit del formulario
  artistaForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(artistaForm);
    const data = {
      codigo: formData.get('codigo') as string,
      nombres: formData.get('nombres') as string,
      apellidos: formData.get('apellidos') as string,
      genero_musica: formData.get('genero_musica') as string,
      ciudad_natal: formData.get('ciudad_natal') as string,
    };

    try {
      const response = await fetch(`${API_URL}/artistas`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (result.success) {
        formMensaje.className = 'mensaje success';
        formMensaje.textContent = 'Artista creado correctamente';
        formMensaje.style.display = 'block';
        
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        formMensaje.className = 'mensaje error';
        formMensaje.textContent = 'Error: ' + result.message;
        formMensaje.style.display = 'block';
      }
    } catch (error) {
      formMensaje.className = 'mensaje error';
      formMensaje.textContent = 'Error al crear el artista';
      formMensaje.style.display = 'block';
      console.error(error);
    }
  });

  // Filtrado en tiempo real
  function filterArtistas() {
    const searchTerm = searchInput.value.toLowerCase();
    const generoTerm = generoFilter.value.toLowerCase();

    artistasRows.forEach(row => {
      const nombre = row.getAttribute('data-nombre') || '';
      const genero = row.getAttribute('data-genero') || '';

      const matchNombre = nombre.includes(searchTerm);
      const matchGenero = genero.includes(generoTerm);

      if (matchNombre && matchGenero) {
        (row as HTMLElement).style.display = '';
      } else {
        (row as HTMLElement).style.display = 'none';
      }
    });
  }

  searchInput.addEventListener('input', filterArtistas);
  generoFilter.addEventListener('input', filterArtistas);
</script>